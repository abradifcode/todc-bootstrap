// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control-input {
  &:disabled {
    ~ .custom-control-label {
      border-color: $custom-control-indicator-disabled-border-color;

      &::before {
        background-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}


// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  margin-bottom: map-get($spacers, 2);
  line-height: $line-height-lg;

  // Background-color and (when enabled) gradient
  &::before {
    top: (($custom-radio-indicator-size - $custom-control-indicator-size) / 2);
    border: $custom-control-indicator-border-radius solid $custom-control-indicator-border-color;
    @include box-shadow($custom-control-indicator-box-shadow);
  }

  // Foreground (icon)
  &::after {
    top: ($custom-radio-indicator-size - $custom-control-indicator-size);
    left: (($custom-radio-indicator-size - $custom-control-indicator-size) / 2);
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-input:checked ~ .custom-control-label {
    border-color: $custom-control-indicator-checked-bg;

    &::after {
      top: .0625rem;
      left: 0;
    }
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    border-color: $custom-control-indicator-checked-bg;

    &::after {
      top: .0625rem;
      left: 0;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label {
      border-color: $custom-checkbox-indicator-checked-disabled-border-color;
    }
    &:indeterminate ~ .custom-control-label {
      border-color: $custom-checkbox-indicator-checked-disabled-border-color;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    width: $custom-radio-indicator-size;
    height: $custom-radio-indicator-size;
    background-color: $custom-control-indicator-bg;
    border: .125rem solid $custom-radio-indicator-border-color;
  }

  .custom-control-input:checked ~ .custom-control-label {
    border-color: $custom-radio-indicator-checked-border-color;

    &::before {
      @include gradient-bg($custom-control-indicator-bg);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label {
      border-color: $custom-control-indicator-checked-disabled-border-color;

      &::after {
        background-image: $custom-radio-indicator-icon-checked-disabled;
      }
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primercss.io.
//

.custom-select {
  &:hover {
    border-color: $input-hover-border-color;
    box-shadow: $input-hover-box-shadow;
  }
}

// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.

.custom-range {

  &::-webkit-slider-thumb {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &::-moz-range-thumb  {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &::-ms-thumb  {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &:focus:not(:active)::-webkit-slider-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:focus:not(:active)::-moz-range-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:focus:not(:active)::-ms-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:active::-webkit-slider-thumb {
    transform: scale(1.5);
  }

  &:active::-moz-range-thumb {
    transform: scale(1.5);
  }

  &:active::-ms-thumb {
    transform: scale(1.5);
  }
}
