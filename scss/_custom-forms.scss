// stylelint-disable selector-no-qualifying-type

// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control-input {
  &:disabled {
    ~ .custom-control-label {
      border-color: $custom-control-indicator-disabled-border-color;

      &::before {
        background-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}


// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  margin-bottom: map-get($spacers, 2);
  line-height: $line-height-lg;

  // Background-color and (when enabled) gradient
  &::before {
    border: $custom-control-indicator-border-radius solid $custom-control-indicator-border-color;
    @include box-shadow($custom-control-indicator-box-shadow);
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-input:checked ~ .custom-control-label {
    border-color: $custom-control-indicator-checked-bg;
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    border-color: $custom-control-indicator-checked-bg;
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label {
      border-color: $custom-checkbox-indicator-checked-disabled-border-color;
    }
    &:indeterminate ~ .custom-control-label {
      border-color: $custom-checkbox-indicator-checked-disabled-border-color;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    width: $custom-radio-indicator-size;
    height: $custom-radio-indicator-size;
    background-color: $custom-control-indicator-bg;
    border: .125rem solid $custom-radio-indicator-border-color;
  }

  .custom-control-input:checked ~ .custom-control-label {
    border-color: $custom-radio-indicator-checked-border-color;

    &::before {
      @include gradient-bg($custom-control-indicator-bg);
    }

    &::after {
      top: .1rem;
      left: -1.45rem;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label {
      border-color: $custom-control-indicator-checked-disabled-border-color;

      &::after {
        background-image: $custom-radio-indicator-icon-checked-disabled;
      }
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primercss.io.
//

.custom-select {
  &:hover {
    border-color: $input-hover-border-color;
    box-shadow: $input-hover-box-shadow;
  }
}


// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.

.custom-range {

  &::-webkit-slider-thumb {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &::-moz-range-thumb  {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &::-ms-thumb  {
    // transition: transform .18s cubic-bezier(.4, 0, .2, 1);
    transition: transform .18s cubic-bezier(.4, 0, .2, 1), border .18s cubic-bezier(.4, 0, .2, 1), box-shadow .18s cubic-bezier(.4, 0, .2, 1), background .28s cubic-bezier(.4, 0, .2, 1);
  }

  &:focus:not(:active)::-webkit-slider-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:focus:not(:active)::-moz-range-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:focus:not(:active)::-ms-thumb {
    box-shadow: 0 0 0 10px rgba($custom-range-thumb-bg, .24);
  }

  &:active::-webkit-slider-thumb {
    transform: scale(1.5);
  }

  &:active::-moz-range-thumb {
    transform: scale(1.5);
  }

  &:active::-ms-thumb {
    transform: scale(1.5);
  }
}

//
// Textual form controls
//

.custom-form-control {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  background-color: $custom-input-bg;
  border: none;
  // border-bottom: $input-border-width solid $input-border-color;
  border-radius: 0;
  transition: $custom-input-transition;
  appearance: none;

  &:focus {
    border-color: $input-focus-border-color;
    outline: none;

    &::placeholder {
      color: $input-placeholder-focus-color;
    }
  }

  &:focus ~ &-ripple-line {
    background-size: 100% 100%, 100% 100%;
    transition-duration: .3s;
  }

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }


  &-ripple-line {
    display: block;
    height: $input-focus-border-width;
    background: no-repeat center bottom, center calc(100% - 1px);
    background-image: linear-gradient(to top, $input-focus-border-color $input-focus-border-width, fade-out($input-focus-border-color, 1) $input-focus-border-width), linear-gradient(to top, $custom-input-border-color $input-border-width, fade-out($custom-input-border-color, 1) $input-border-width);
    background-size: 0 100%, 100% 100%;
    @include transition($custom-input-bottom-line-transition);
  }
}

select.custom-form-control {
  &:not([size]):not([multiple]) {
    background: $custom-input-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
    background-size: $custom-select-bg-size;
  }
}
